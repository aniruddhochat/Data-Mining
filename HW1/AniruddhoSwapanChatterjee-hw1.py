# -*- coding: utf-8 -*-
"""Data Mining HW1 Problem 2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NQFM6JG8DXNljSAECoW2SOuUBNV5-eVE

Problem 2
"""

import numpy as np
import matplotlib.pyplot as plt

def functionFM(minDist,maxDist):
  x = (maxDist - minDist)/(minDist)
  fm = np.log10(x)
  return fm

nValue=150
trails=10

def probabDist():
  dist=[]
  AvgFm=[]
  finalFm=[]
  for m in range(1,100):
    for t in range(1,trails):
      p=np.random.uniform(low = 0, high = 1, size = m)
      minDist=0
      maxDist=0
      dist=[]
      for n in range(1, nValue):
        l1=np.random.uniform(low = 0, high = 1, size = m)
        dist.append(np.linalg.norm(l1-p))
      minDist=min(dist)
      maxDist=max(dist)
      finalFm.append(functionFM(minDist,maxDist))
    AvgFm.append(np.average(finalFm))
  return AvgFm

plt.plot(np.arange(1,100).tolist(),probabDist(),label = "plot line")
plt.xlabel('m')
plt.ylabel('f(m)')
plt.title('Curse of dimensionality')
plt.legend()
plt.show()

nValue=1500
trails=10

plt.plot(np.arange(1,100).tolist(),probabDist(),label = "plot line")
plt.xlabel('m')
plt.ylabel('f(m)')
plt.title('Curse of dimensionality')
plt.legend()
plt.show()

nValue=15000
trails=10

plt.plot(np.arange(1,100).tolist(),probabDist(),label = "plot line")
plt.xlabel('m')
plt.ylabel('f(m)')
plt.title('Curse of dimensionality')
plt.legend()
plt.show()

nValue=150000
trails=10

plt.plot(np.arange(1,100).tolist(),probabDist(),label = "plot line")
plt.xlabel('m')
plt.ylabel('f(m)')
plt.title('Curse of dimensionality')
plt.legend()
plt.show()

# -*- coding: utf-8 -*-
"""Data Mining HW1 Problem 5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Bg_ofkTf3U4FYFCSSQ2YKx97qUG7cA16

Problem 5
"""

import csv
import pandas as pd
import matplotlib.pyplot as plt
from matplotlib.pyplot import figure

"""Problem 5.1"""

houseData=pd.read_csv('housing_data.csv')
print(len(houseData))

"""Problem 5.2"""

#To get column wise number of null vales
houseData.isnull().sum()
#To get total number of null values
houseData.isnull().sum().sum()

"""Problem 5.3"""

unstackedCorr=houseData.corr().unstack().sort_values(ascending=False)
salesPriceCorr=unstackedCorr['SalePrice']
print(salesPriceCorr[0:11])#11 because Correlation of SalePrice to SalePrice is 1

"""Overall Quality Scatter Plot"""

houseData.plot(y='SalePrice', x='OverallQual', kind='scatter')

"""Greater Living Area Scatter Plot"""

houseData.plot(y='SalePrice', x='GrLivArea', kind='scatter')

"""Garage Cars Scatter Plot"""

houseData.plot( y='SalePrice', x='GarageCars', kind='scatter')

"""Garage Area Scatter Plot"""

houseData.plot(y='SalePrice', x='GarageArea', kind='scatter')

"""Total Basement Square Feet Scatter Plot"""

houseData.plot(y='SalePrice', x='TotalBsmtSF', kind='scatter')

"""First Floor Square Feet Scatter Plot"""

houseData.plot(y='SalePrice', x='1stFlrSF', kind='scatter')

"""Full Bath Scatter Plot"""

houseData.plot( y='SalePrice', x='FullBath', kind='scatter')

"""Total RMS Above Ground Scatter Plot"""

houseData.plot(y='SalePrice',x='TotRmsAbvGrd', kind='scatter')

"""Year Built Scatter Plot"""

houseData.plot( y='SalePrice', x='YearBuilt', kind='scatter')

"""Year Remod Add Scatter Plot"""

houseData.plot( y='SalePrice', x='YearRemodAdd', kind='scatter')

"""Problem 5.4

Overall Quality Histogram
"""

x1 = houseData.loc[houseData.OverallQual==1, 'SalePrice']
x2 = houseData.loc[houseData.OverallQual==2, 'SalePrice']
x3 = houseData.loc[houseData.OverallQual==3, 'SalePrice']
x4 = houseData.loc[houseData.OverallQual==4, 'SalePrice']
x5 = houseData.loc[houseData.OverallQual==5, 'SalePrice']
x6 = houseData.loc[houseData.OverallQual==6, 'SalePrice']
x7 = houseData.loc[houseData.OverallQual==7, 'SalePrice']
x8 = houseData.loc[houseData.OverallQual==8, 'SalePrice']
x9 = houseData.loc[houseData.OverallQual==9, 'SalePrice']
x10 = houseData.loc[houseData.OverallQual==10, 'SalePrice']

plt.hist(x1,alpha=0.5, bins=50,label='1')
plt.hist(x2,alpha=0.5, bins=50,label='2')
plt.hist(x3,alpha=0.5, bins=50,label='3')
plt.hist(x4,alpha=0.5, bins=50,label='4')
plt.hist(x5,alpha=0.5, bins=50,label='5')
plt.hist(x6,alpha=0.5, bins=50,label='6')
plt.hist(x7,alpha=0.5, bins=50,label='7')
plt.hist(x8,alpha=0.5, bins=50,label='8')
plt.hist(x9,alpha=0.5, bins=50,label='9')
plt.hist(x10,alpha=0.5, bins=50,label='10')
plt.gca().set(title='Frequency Histogram of Overall Quality',xlabel='Sales Price', ylabel='Frequency')
plt.legend(title='Overall Quality');
plt.show();

"""Greater Living Area Histogram"""

x1 = houseData.loc[houseData.GrLivArea.between(0,1000,inclusive='both'), 'SalePrice']
x2 = houseData.loc[houseData.GrLivArea.between(1001,2000,inclusive='both'), 'SalePrice']
x3 = houseData.loc[houseData.GrLivArea.between(2001,3000,inclusive='both'), 'SalePrice']
x4 = houseData.loc[houseData.GrLivArea.between(3001,4000,inclusive='both'), 'SalePrice']
x5 = houseData.loc[houseData.GrLivArea.between(4001,5000,inclusive='both'), 'SalePrice']
x6 = houseData.loc[houseData.GrLivArea.between(5000,6000,inclusive='both'), 'SalePrice']

plt.hist(x1,alpha=0.5, bins=50,label='0-1000')
plt.hist(x2,alpha=0.5, bins=50,label='1001-2000')
plt.hist(x3,alpha=0.5, bins=50,label='2001-3000')
plt.hist(x4,alpha=0.5, bins=50,label='3001-4000')
plt.hist(x5,alpha=0.5, bins=50,label='4001-5000')
plt.hist(x6,alpha=0.5, bins=50,label='5001-6000')
plt.gca().set(title='Frequency Histogram of Greater Living Area',xlabel='Sales Price', ylabel='Frequency')
plt.legend(title='Greater Living Area');
plt.show();

"""Garage Cars Histogram"""

x1 = houseData.loc[houseData.GarageCars==1, 'SalePrice']
x2 = houseData.loc[houseData.GarageCars==2, 'SalePrice']
x3 = houseData.loc[houseData.GarageCars==3, 'SalePrice']
x4 = houseData.loc[houseData.GarageCars==4, 'SalePrice']

plt.hist(x1,alpha=0.5, bins=50, color='r', label='1')
plt.hist(x2,alpha=0.5, bins=50, color='g', label='2')
plt.hist(x3,alpha=0.5, bins=50, color='b', label='3')
plt.hist(x4,alpha=0.5, bins=50, color='magenta', label='4')
plt.gca().set(title='Frequency Histogram of Garage Cars',xlabel='Sales Price', ylabel='Frequency')
plt.legend(title='Garage Cars');
plt.show();

"""Garage Area Histogram"""

x1 = houseData.loc[houseData.GarageArea.between(0,400,inclusive='both'), 'SalePrice']
x2 = houseData.loc[houseData.GarageArea.between(401,800,inclusive='both'), 'SalePrice']
x3 = houseData.loc[houseData.GarageArea.between(801,1200,inclusive='both'), 'SalePrice']
x4 = houseData.loc[houseData.GarageArea.between(1201,1600,inclusive='both'), 'SalePrice']

plt.hist(x1,alpha=0.5, bins=50,label='0-400')
plt.hist(x2,alpha=0.5, bins=50,label='401-800')
plt.hist(x3,alpha=0.5, bins=50,label='801-1200')
plt.hist(x4,alpha=0.5, bins=50,label='1201-1600')
plt.gca().set(title='Frequency Histogram of Garage Area',xlabel='Sales Price', ylabel='Frequency')
plt.legend(title='Garage Area');
plt.show();

"""Total Basement Square Feet Histogram"""

x1 = houseData.loc[houseData.TotalBsmtSF.between(0,1000,inclusive='both'), 'SalePrice']
x2 = houseData.loc[houseData.TotalBsmtSF.between(1001,2000,inclusive='both'), 'SalePrice']
x3 = houseData.loc[houseData.TotalBsmtSF.between(2001,3000,inclusive='both'), 'SalePrice']
x4 = houseData.loc[houseData.TotalBsmtSF.between(3001,4000,inclusive='both'), 'SalePrice']
x5 = houseData.loc[houseData.TotalBsmtSF.between(4001,7000,inclusive='both'), 'SalePrice']
plt.hist(x1,alpha=0.5, bins=50,label='0-1000')
plt.hist(x2,alpha=0.5, bins=50,label='1001-2000')
plt.hist(x3,alpha=0.5, bins=50,label='2001-3000')
plt.hist(x4,alpha=0.5, bins=50,label='3001-4000')
plt.hist(x4,alpha=0.5, bins=50,label='4001-7000')
plt.gca().set(title='Frequency Histogram of Total Basement Square Feet',xlabel='Sales Price', ylabel='Frequency')
plt.legend(title='Total Basement Square Feet');
plt.show();

"""1st Floor Square Feet Histogram"""

x1 = houseData.loc[houseData['1stFlrSF'].between(0,1000,inclusive='both'), 'SalePrice']
x2 = houseData.loc[houseData['1stFlrSF'].between(1001,2000,inclusive='both'), 'SalePrice']
x3 = houseData.loc[houseData['1stFlrSF'].between(2001,3000,inclusive='both'), 'SalePrice']
x4 = houseData.loc[houseData['1stFlrSF'].between(3001,4000,inclusive='both'), 'SalePrice']
x5 = houseData.loc[houseData['1stFlrSF'].between(4001,7000,inclusive='both'), 'SalePrice']
plt.hist(x1,alpha=0.5, bins=50,label='0-1000')
plt.hist(x2,alpha=0.5, bins=50,label='1001-2000')
plt.hist(x3,alpha=0.5, bins=50,label='2001-3000')
plt.hist(x4,alpha=0.5, bins=50,label='3001-4000')
plt.hist(x4,alpha=0.5, bins=50,label='4001-7000')
plt.gca().set(title='Frequency Histogram of Total First Floor Square Feet',xlabel='Sales Price', ylabel='Frequency')
plt.legend(title='Total First Floor Square Feet');
plt.show();

"""Full bath Histogram"""

x1 = houseData.loc[houseData.FullBath==1, 'SalePrice']
x2 = houseData.loc[houseData.FullBath==2, 'SalePrice']
x3 = houseData.loc[houseData.FullBath==3, 'SalePrice']
x4 = houseData.loc[houseData.FullBath==4, 'SalePrice']

plt.hist(x1,alpha=0.5, bins=50, color='r', label='1')
plt.hist(x2,alpha=0.5, bins=50, color='g', label='2')
plt.hist(x3,alpha=0.5, bins=50, color='b', label='3')
plt.hist(x4,alpha=0.5, bins=50, color='magenta', label='4')
plt.gca().set(title='Frequency Histogram of Full Bath',xlabel='Sales Price', ylabel='Frequency')
plt.legend(title='Full Bath');
plt.show();

"""Total RMS Above Ground Histogram"""

x1 = houseData.loc[houseData.TotRmsAbvGrd.between(0,4,inclusive='both'), 'SalePrice']
x2 = houseData.loc[houseData.TotRmsAbvGrd.between(5,8,inclusive='both'), 'SalePrice']
x3 = houseData.loc[houseData.TotRmsAbvGrd.between(9,14,inclusive='both'), 'SalePrice']
x4 = houseData.loc[houseData.TotRmsAbvGrd.between(14,18,inclusive='both'), 'SalePrice']

plt.hist(x1,alpha=0.5, bins=50,label='0-4')
plt.hist(x2,alpha=0.5, bins=50,label='5-8')
plt.hist(x3,alpha=0.5, bins=50,label='9-14')
plt.hist(x4,alpha=0.5, bins=50,label='14-18')
plt.gca().set(title='Frequency Histogram of Total Rms Above Ground',xlabel='Sales Price', ylabel='Frequency')
plt.legend(title='Total Rms Above Ground');
plt.show();

"""Year Built Histogram"""

x1 = houseData.loc[houseData.YearBuilt.between(1800,1850,inclusive='both'), 'SalePrice']
x2 = houseData.loc[houseData.YearBuilt.between(1851,1900,inclusive='both'), 'SalePrice']
x3 = houseData.loc[houseData.YearBuilt.between(1901,1950,inclusive='both'), 'SalePrice']
x4 = houseData.loc[houseData.YearBuilt.between(1951,2000,inclusive='both'), 'SalePrice']

plt.hist(x1,alpha=0.5, bins=50,label='1800-1850')
plt.hist(x2,alpha=0.5, bins=50,label='1851-1900')
plt.hist(x3,alpha=0.5, bins=50,label='1901-1950')
plt.hist(x4,alpha=0.5, bins=50,label='1951-2000')
plt.gca().set(title='Frequency Histogram of Year Built',xlabel='Sales Price', ylabel='Frequency')
plt.legend(title='Year Built');
plt.show();

"""Year Remod Add Histogram"""

x1 = houseData.loc[houseData.YearRemodAdd.between(1900,1950,inclusive='both'), 'SalePrice']
x2 = houseData.loc[houseData.YearRemodAdd.between(1951,2000,inclusive='both'), 'SalePrice']
x3 = houseData.loc[houseData.YearRemodAdd.between(2001,2050,inclusive='both'), 'SalePrice']

plt.hist(x1,alpha=0.5, bins=50,label='1900-1950')
plt.hist(x2,alpha=0.5, bins=50,label='1951-2000')
plt.hist(x3,alpha=0.5, bins=50,label='2001-2050')
plt.gca().set(title='Frequency Histogram of Year Remod Add',xlabel='Sales Price', ylabel='Frequency')
plt.legend(title='Year Remod Add');
plt.show();